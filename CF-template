#Still working on this hell

AWSTemplateFormatVersion: 2010-09-09

Resources:
#Create Auto Scaling Group
  AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties: 
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MaxSize: '5'
      MinSize: '2'
      DesiredCapacity: '2'
      VPCZoneIdentifier: 
        - !Ref VPC
        - !Ref VPC 
      MetricsCollection:
        - Granularity: 1Minute
  
  #Create Scaling Policy
  ScalingPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties: 
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref AutoScalingGroup
      Cooldown: "60"
      ScalingAdjustment: "1"

  #Use Default VPC
  VPC:
    Type: AWS::EC2::VPC
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 172.31.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default   
  
  #Create Security Group
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties: 
      GroupDescription: Open HTTP (port 80) and SSH (port 22)
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
  
  #Create Launch Template
  LaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateName: CF-LT
      LaunchTemplateData:
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociatePublicIpAddress: true
            DeleteOnTermination: true
            Groups:
              - !Ref SecurityGroup
        ImageId: ami-0022f774911c1d690
        InstanceType: t2.micro
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            yum install httpd -y
            systemctl start httpd
            systemctl enable httpd
            amazon-linux-extras install epel -y
            yum install stress -y
  
  #Create Cloudwatch Alarm
  CloudWatchAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      EvaluationPeriods: '1'
      Statistic: Average
      Threshold: '50'
      AlarmDescription: Alarm if CPU higher than 50%
      Period: '60'
      AlarmActions:
        - !Ref ScalingPolicy
      Namespace: AWS/EC2
      Dimensions:
        - Name: AutoScalingGroupName
          Value:
            Ref: AutoScalingGroup
      ComparisonOperator: GreaterThanThreshold
      MetricName: CPUUtilization
